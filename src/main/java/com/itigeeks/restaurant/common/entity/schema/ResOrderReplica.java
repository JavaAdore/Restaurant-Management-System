/*
 * Created on 24 Mar 2016 ( Time 16:42:55 ) Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite)

package com.itigeeks.restaurant.common.entity.schema;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.itigeeks.restaurant.common.entity.AbstractEntity;
// import javax.validation.constraints.* ;
// import org.hibernate.validator.constraints.* ;


/**
 * Persistent class for entity stored in table "res_order_replica"
 * 
 * @author Telosys Tools Generator
 * 
 */

@Entity
@Table(name = "res_order_replica", catalog = "viceroy")
// Define named queries here
@NamedQueries({@NamedQuery(name = "ResOrderReplica.countAll",
    query = "SELECT COUNT(x) FROM ResOrderReplica x")})
public class ResOrderReplica extends AbstractEntity implements Serializable {
  private static final long serialVersionUID = 1L;

  // ----------------------------------------------------------------------
  // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
  // ----------------------------------------------------------------------
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Column(name = "id", nullable = false)
  private Long id;


  // ----------------------------------------------------------------------
  // ENTITY DATA FIELDS
  // ----------------------------------------------------------------------
  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "order_date", nullable = false)
  private Date orderDate;

  @Column(name = "is_converted_to_take_away", nullable = false)
  private Boolean isConvertedToTakeAway;

  @Column(name = "is_active", nullable = false)
  private Boolean isActive;

  @Column(name = "is_coming_from_web", nullable = false)
  private Boolean isComingFromWeb;

  @Column(name = "is_coming_from_local_web", nullable = false)
  private Boolean isComingFromLocalWeb;

  @Column(name = "is_part_payment", nullable = false)
  private Boolean isPartPayment;

  @Column(name = "is_write_off", nullable = false)
  private Boolean isWriteOff;

  @Column(name = "is_pre_order", nullable = false)
  private Boolean isPreOrder;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "last_update", nullable = false)
  private Date lastUpdate;

  @Column(name = "tax", nullable = false)
  private Integer tax;

  @Column(name = "service_charge", nullable = false)
  private Integer serviceCharge;

  @Column(name = "gratuity", nullable = false)
  private Integer gratuity;

  @Column(name = "gratuity_settings", nullable = false)
  private Integer gratuitySettings;

  @Column(name = "gratuity_is_flat", nullable = false)
  private Boolean gratuityIsFlat;

  @Column(name = "sub_total", nullable = false)
  private Integer subTotal;

  @Column(name = "total", nullable = false)
  private Integer total;

  @Column(name = "is_print_que", nullable = false)
  private Boolean isPrintQue;

  @Column(name = "que_sequence_number", nullable = false)
  private Short queSequenceNumber;

  @Column(name = "order_child_ids", length = 5000)
  private String orderChildIds;

  @Column(name = "duplicate_order_child_ids", length = 5000)
  private String duplicateOrderChildIds;

  @Column(name = "discount", nullable = false)
  private Integer discount;

  @Column(name = "is_send_sms", nullable = false)
  private Boolean isSendSms;

  @Column(name = "total_paid")
  private Integer totalPaid;

  @Column(name = "comments", length = 500)
  private String comments;

  @Column(name = "is_processed", nullable = false)
  private Boolean isProcessed;

  @Column(name = "is_new", nullable = false)
  private Boolean isNew;

  @Column(name = "delivery_charge", nullable = false)
  private Integer deliveryCharge;

  // "tableId" (column "table_id") is not defined by itself because used as FK in a link
  // "localWebActionId" (column "local_web_action_id") is not defined by itself because used as FK
  // in a link
  // "customerId" (column "customer_id") is not defined by itself because used as FK in a link
  // "lastUpdatedBy" (column "last_updated_by") is not defined by itself because used as FK in a
  // link
  // "orderTypeId" (column "order_type_id") is not defined by itself because used as FK in a link
  // "statusId" (column "status_id") is not defined by itself because used as FK in a link
  // "prepLocationId" (column "prep_location_id") is not defined by itself because used as FK in a
  // link
  // "customerAddressId" (column "customer_address_id") is not defined by itself because used as FK
  // in a link


  // ----------------------------------------------------------------------
  // ENTITY LINKS ( RELATIONSHIP )
  // ----------------------------------------------------------------------
  @ManyToOne
  @JoinColumn(name = "customer_address_id", referencedColumnName = "id")
  private ResCustomerAddress resCustomerAddress;

  @ManyToOne
  @JoinColumn(name = "table_id", referencedColumnName = "id")
  private ResTable resTable;

  @OneToMany(mappedBy = "resOrderReplica", targetEntity = ResOrder.class)
  private List<ResOrder> listOfResOrder;

  @ManyToOne
  @JoinColumn(name = "status_id", referencedColumnName = "id")
  private ResOrderStatus resOrderStatus;

  @ManyToOne
  @JoinColumn(name = "customer_id", referencedColumnName = "id")
  private ResCustomer resCustomer;

  @ManyToOne
  @JoinColumn(name = "last_updated_by", referencedColumnName = "id")
  private ResUser resUser;

  @ManyToOne
  @JoinColumn(name = "local_web_action_id", referencedColumnName = "id")
  private ResOrderActionType resOrderActionType;

  @ManyToOne
  @JoinColumn(name = "order_type_id", referencedColumnName = "id")
  private ResOrderType resOrderType;

  @ManyToOne
  @JoinColumn(name = "prep_location_id", referencedColumnName = "id")
  private ResPrepLocation resPrepLocation;


  // ----------------------------------------------------------------------
  // CONSTRUCTOR(S)
  // ----------------------------------------------------------------------
  public ResOrderReplica() {
    super();
  }

  // ----------------------------------------------------------------------
  // GETTER & SETTER FOR THE KEY FIELD
  // ----------------------------------------------------------------------
  public void setId(Long id) {
    this.id = id;
  }

  public Long getId() {
    return this.id;
  }

  // ----------------------------------------------------------------------
  // GETTERS & SETTERS FOR FIELDS
  // ----------------------------------------------------------------------
  // --- DATABASE MAPPING : order_date ( DATETIME )
  public void setOrderDate(Date orderDate) {
    this.orderDate = orderDate;
  }

  public Date getOrderDate() {
    return this.orderDate;
  }

  // --- DATABASE MAPPING : is_converted_to_take_away ( BIT )
  public void setIsConvertedToTakeAway(Boolean isConvertedToTakeAway) {
    this.isConvertedToTakeAway = isConvertedToTakeAway;
  }

  public Boolean getIsConvertedToTakeAway() {
    return this.isConvertedToTakeAway;
  }

  // --- DATABASE MAPPING : is_active ( BIT )
  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public Boolean getIsActive() {
    return this.isActive;
  }

  // --- DATABASE MAPPING : is_coming_from_web ( BIT )
  public void setIsComingFromWeb(Boolean isComingFromWeb) {
    this.isComingFromWeb = isComingFromWeb;
  }

  public Boolean getIsComingFromWeb() {
    return this.isComingFromWeb;
  }

  // --- DATABASE MAPPING : is_coming_from_local_web ( BIT )
  public void setIsComingFromLocalWeb(Boolean isComingFromLocalWeb) {
    this.isComingFromLocalWeb = isComingFromLocalWeb;
  }

  public Boolean getIsComingFromLocalWeb() {
    return this.isComingFromLocalWeb;
  }

  // --- DATABASE MAPPING : is_part_payment ( BIT )
  public void setIsPartPayment(Boolean isPartPayment) {
    this.isPartPayment = isPartPayment;
  }

  public Boolean getIsPartPayment() {
    return this.isPartPayment;
  }

  // --- DATABASE MAPPING : is_write_off ( BIT )
  public void setIsWriteOff(Boolean isWriteOff) {
    this.isWriteOff = isWriteOff;
  }

  public Boolean getIsWriteOff() {
    return this.isWriteOff;
  }

  // --- DATABASE MAPPING : is_pre_order ( BIT )
  public void setIsPreOrder(Boolean isPreOrder) {
    this.isPreOrder = isPreOrder;
  }

  public Boolean getIsPreOrder() {
    return this.isPreOrder;
  }

  // --- DATABASE MAPPING : last_update ( DATETIME )
  public void setLastUpdate(Date lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  public Date getLastUpdate() {
    return this.lastUpdate;
  }

  // --- DATABASE MAPPING : tax ( DECIMAL )
  public void setTax(Integer tax) {
    this.tax = tax;
  }

  public Integer getTax() {
    return this.tax;
  }

  // --- DATABASE MAPPING : service_charge ( DECIMAL )
  public void setServiceCharge(Integer serviceCharge) {
    this.serviceCharge = serviceCharge;
  }

  public Integer getServiceCharge() {
    return this.serviceCharge;
  }

  // --- DATABASE MAPPING : gratuity ( DECIMAL )
  public void setGratuity(Integer gratuity) {
    this.gratuity = gratuity;
  }

  public Integer getGratuity() {
    return this.gratuity;
  }

  // --- DATABASE MAPPING : gratuity_settings ( DECIMAL )
  public void setGratuitySettings(Integer gratuitySettings) {
    this.gratuitySettings = gratuitySettings;
  }

  public Integer getGratuitySettings() {
    return this.gratuitySettings;
  }

  // --- DATABASE MAPPING : gratuity_is_flat ( BIT )
  public void setGratuityIsFlat(Boolean gratuityIsFlat) {
    this.gratuityIsFlat = gratuityIsFlat;
  }

  public Boolean getGratuityIsFlat() {
    return this.gratuityIsFlat;
  }

  // --- DATABASE MAPPING : sub_total ( DECIMAL )
  public void setSubTotal(Integer subTotal) {
    this.subTotal = subTotal;
  }

  public Integer getSubTotal() {
    return this.subTotal;
  }

  // --- DATABASE MAPPING : total ( DECIMAL )
  public void setTotal(Integer total) {
    this.total = total;
  }

  public Integer getTotal() {
    return this.total;
  }

  // --- DATABASE MAPPING : is_print_que ( BIT )
  public void setIsPrintQue(Boolean isPrintQue) {
    this.isPrintQue = isPrintQue;
  }

  public Boolean getIsPrintQue() {
    return this.isPrintQue;
  }

  // --- DATABASE MAPPING : que_sequence_number ( SMALLINT )
  public void setQueSequenceNumber(Short queSequenceNumber) {
    this.queSequenceNumber = queSequenceNumber;
  }

  public Short getQueSequenceNumber() {
    return this.queSequenceNumber;
  }

  // --- DATABASE MAPPING : order_child_ids ( VARCHAR )
  public void setOrderChildIds(String orderChildIds) {
    this.orderChildIds = orderChildIds;
  }

  public String getOrderChildIds() {
    return this.orderChildIds;
  }

  // --- DATABASE MAPPING : duplicate_order_child_ids ( VARCHAR )
  public void setDuplicateOrderChildIds(String duplicateOrderChildIds) {
    this.duplicateOrderChildIds = duplicateOrderChildIds;
  }

  public String getDuplicateOrderChildIds() {
    return this.duplicateOrderChildIds;
  }

  // --- DATABASE MAPPING : discount ( DECIMAL )
  public void setDiscount(Integer discount) {
    this.discount = discount;
  }

  public Integer getDiscount() {
    return this.discount;
  }

  // --- DATABASE MAPPING : is_send_sms ( BIT )
  public void setIsSendSms(Boolean isSendSms) {
    this.isSendSms = isSendSms;
  }

  public Boolean getIsSendSms() {
    return this.isSendSms;
  }

  // --- DATABASE MAPPING : total_paid ( DECIMAL )
  public void setTotalPaid(Integer totalPaid) {
    this.totalPaid = totalPaid;
  }

  public Integer getTotalPaid() {
    return this.totalPaid;
  }

  // --- DATABASE MAPPING : comments ( VARCHAR )
  public void setComments(String comments) {
    this.comments = comments;
  }

  public String getComments() {
    return this.comments;
  }

  // --- DATABASE MAPPING : is_processed ( BIT )
  public void setIsProcessed(Boolean isProcessed) {
    this.isProcessed = isProcessed;
  }

  public Boolean getIsProcessed() {
    return this.isProcessed;
  }

  // --- DATABASE MAPPING : is_new ( BIT )
  public void setIsNew(Boolean isNew) {
    this.isNew = isNew;
  }

  public Boolean getIsNew() {
    return this.isNew;
  }

  // --- DATABASE MAPPING : delivery_charge ( DECIMAL )
  public void setDeliveryCharge(Integer deliveryCharge) {
    this.deliveryCharge = deliveryCharge;
  }

  public Integer getDeliveryCharge() {
    return this.deliveryCharge;
  }


  // ----------------------------------------------------------------------
  // GETTERS & SETTERS FOR LINKS
  // ----------------------------------------------------------------------
  public void setResCustomerAddress(ResCustomerAddress resCustomerAddress) {
    this.resCustomerAddress = resCustomerAddress;
  }

  public ResCustomerAddress getResCustomerAddress() {
    return this.resCustomerAddress;
  }

  public void setResTable(ResTable resTable) {
    this.resTable = resTable;
  }

  public ResTable getResTable() {
    return this.resTable;
  }

  public void setListOfResOrder(List<ResOrder> listOfResOrder) {
    this.listOfResOrder = listOfResOrder;
  }

  public List<ResOrder> getListOfResOrder() {
    return this.listOfResOrder;
  }

  public void setResOrderStatus(ResOrderStatus resOrderStatus) {
    this.resOrderStatus = resOrderStatus;
  }

  public ResOrderStatus getResOrderStatus() {
    return this.resOrderStatus;
  }

  public void setResCustomer(ResCustomer resCustomer) {
    this.resCustomer = resCustomer;
  }

  public ResCustomer getResCustomer() {
    return this.resCustomer;
  }

  public void setResUser(ResUser resUser) {
    this.resUser = resUser;
  }

  public ResUser getResUser() {
    return this.resUser;
  }

  public void setResOrderActionType(ResOrderActionType resOrderActionType) {
    this.resOrderActionType = resOrderActionType;
  }

  public ResOrderActionType getResOrderActionType() {
    return this.resOrderActionType;
  }

  public void setResOrderType(ResOrderType resOrderType) {
    this.resOrderType = resOrderType;
  }

  public ResOrderType getResOrderType() {
    return this.resOrderType;
  }

  public void setResPrepLocation(ResPrepLocation resPrepLocation) {
    this.resPrepLocation = resPrepLocation;
  }

  public ResPrepLocation getResPrepLocation() {
    return this.resPrepLocation;
  }


  // ----------------------------------------------------------------------
  // toString METHOD
  // ----------------------------------------------------------------------
  public String toString() {
    StringBuffer sb = new StringBuffer();
    sb.append("[");
    sb.append(id);
    sb.append("]:");
    sb.append(orderDate);
    sb.append("|");
    sb.append(isConvertedToTakeAway);
    sb.append("|");
    sb.append(isActive);
    sb.append("|");
    sb.append(isComingFromWeb);
    sb.append("|");
    sb.append(isComingFromLocalWeb);
    sb.append("|");
    sb.append(isPartPayment);
    sb.append("|");
    sb.append(isWriteOff);
    sb.append("|");
    sb.append(isPreOrder);
    sb.append("|");
    sb.append(lastUpdate);
    sb.append("|");
    sb.append(tax);
    sb.append("|");
    sb.append(serviceCharge);
    sb.append("|");
    sb.append(gratuity);
    sb.append("|");
    sb.append(gratuitySettings);
    sb.append("|");
    sb.append(gratuityIsFlat);
    sb.append("|");
    sb.append(subTotal);
    sb.append("|");
    sb.append(total);
    sb.append("|");
    sb.append(isPrintQue);
    sb.append("|");
    sb.append(queSequenceNumber);
    sb.append("|");
    sb.append(orderChildIds);
    sb.append("|");
    sb.append(duplicateOrderChildIds);
    sb.append("|");
    sb.append(discount);
    sb.append("|");
    sb.append(isSendSms);
    sb.append("|");
    sb.append(totalPaid);
    sb.append("|");
    sb.append(comments);
    sb.append("|");
    sb.append(isProcessed);
    sb.append("|");
    sb.append(isNew);
    sb.append("|");
    sb.append(deliveryCharge);
    return sb.toString();
  }

}
