/*
 * Created on 24 Mar 2016 ( Time 16:42:57 ) Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite)

package com.itigeeks.restaurant.common.entity.schema;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.itigeeks.restaurant.common.entity.AbstractEntity;
// import javax.validation.constraints.* ;
// import org.hibernate.validator.constraints.* ;
import java.util.Date;
import java.util.List;

/**
 * Persistent class for entity stored in table "res_user"
 * 
 * @author Telosys Tools Generator
 * 
 */

@Entity
@Table(name = "res_user", catalog = "viceroy")
// Define named queries here
@NamedQueries({@NamedQuery(name = "ResUser.countAll", query = "SELECT COUNT(x) FROM ResUser x")})
public class ResUser extends AbstractEntity implements Serializable {
  private static final long serialVersionUID = 1L;

  // ----------------------------------------------------------------------
  // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
  // ----------------------------------------------------------------------
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Column(name = "id", nullable = false)
  private Long id;


  // ----------------------------------------------------------------------
  // ENTITY DATA FIELDS
  // ----------------------------------------------------------------------
  @Column(name = "code", length = 50)
  private String code;

  @Column(name = "card", length = 50)
  private String card;

  @Column(name = "user_name", length = 150)
  private String userName;

  @Column(name = "password", length = 40)
  private String password;

  @Column(name = "mobile", length = 20)
  private String mobile;

  @Column(name = "email", length = 50)
  private String email;

  @Column(name = "ip_address", length = 15)
  private String ipAddress;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "last_activity")
  private Date lastActivity;

  @Column(name = "is_active", nullable = false)
  private Boolean isActive;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "last_update")
  private Date lastUpdate;

  @Column(name = "api_key", length = 40)
  private String apiKey;

  // "userTypeId" (column "user_type_id") is not defined by itself because used as FK in a link
  // "lastUpdatedBy" (column "last_updated_by") is not defined by itself because used as FK in a
  // link
  // "cardTypeId" (column "card_type_id") is not defined by itself because used as FK in a link


  // ----------------------------------------------------------------------
  // ENTITY LINKS ( RELATIONSHIP )
  // ----------------------------------------------------------------------
  @OneToMany(mappedBy = "resUser2", targetEntity = ResMessage.class)
  private List<ResMessage> listOfResMessage2;

  @OneToMany(mappedBy = "resUser", targetEntity = ResIngredient.class)
  private List<ResIngredient> listOfResIngredient;

  @OneToMany(mappedBy = "resUser", targetEntity = ResLog.class)
  private List<ResLog> listOfResLog;

  @OneToMany(mappedBy = "resUser", targetEntity = ResCombineReportPermission.class)
  private List<ResCombineReportPermission> listOfResCombineReportPermission;

  @ManyToOne
  @JoinColumn(name = "user_type_id", referencedColumnName = "id")
  private ResUserType resUserType;

  @OneToMany(mappedBy = "resUser", targetEntity = ResCustomerComment.class)
  private List<ResCustomerComment> listOfResCustomerComment;

  @ManyToOne
  @JoinColumn(name = "card_type_id", referencedColumnName = "id")
  private ResCardType resCardType;

  @OneToMany(mappedBy = "resUser", targetEntity = ResVoucher.class)
  private List<ResVoucher> listOfResVoucher;

  @OneToMany(mappedBy = "resUser", targetEntity = ResOrderReplica.class)
  private List<ResOrderReplica> listOfResOrderReplica;

  @OneToMany(mappedBy = "resUser2", targetEntity = ResPrepLocation.class)
  private List<ResPrepLocation> listOfResPrepLocation2;

  @OneToMany(mappedBy = "resUser", targetEntity = ResButtonPermissionSettings.class)
  private List<ResButtonPermissionSettings> listOfResButtonPermissionSettings;

  @OneToMany(mappedBy = "resUser", targetEntity = ResOrderChild.class)
  private List<ResOrderChild> listOfResOrderChild;

  @OneToMany(mappedBy = "resUser", targetEntity = ResQuantityType.class)
  private List<ResQuantityType> listOfResQuantityType;

  @OneToMany(mappedBy = "resUser", targetEntity = ResPrinter.class)
  private List<ResPrinter> listOfResPrinter;

  @OneToMany(mappedBy = "resUser", targetEntity = ResZreportPermission.class)
  private List<ResZreportPermission> listOfResZreportPermission;

  @OneToMany(mappedBy = "resUser", targetEntity = ResOrder.class)
  private List<ResOrder> listOfResOrder;

  @OneToMany(mappedBy = "resUser", targetEntity = ResProduct.class)
  private List<ResProduct> listOfResProduct;

  @OneToMany(mappedBy = "resUser", targetEntity = ResPayment.class)
  private List<ResPayment> listOfResPayment;

  @OneToMany(mappedBy = "resUser", targetEntity = ResCustomerMessage.class)
  private List<ResCustomerMessage> listOfResCustomerMessage;

  @OneToMany(mappedBy = "resUser", targetEntity = ResFloor.class)
  private List<ResFloor> listOfResFloor;

  @OneToMany(mappedBy = "resUser", targetEntity = ResFlaggedOccassion.class)
  private List<ResFlaggedOccassion> listOfResFlaggedOccassion;

  @OneToMany(mappedBy = "resUser", targetEntity = ResModem.class)
  private List<ResModem> listOfResModem;

  @OneToMany(mappedBy = "resUser", targetEntity = ResDashboardSettings.class)
  private List<ResDashboardSettings> listOfResDashboardSettings;

  @OneToMany(mappedBy = "resUser", targetEntity = ResTable.class)
  private List<ResTable> listOfResTable;

  @OneToMany(mappedBy = "resUser", targetEntity = ResOrderDeleteLog.class)
  private List<ResOrderDeleteLog> listOfResOrderDeleteLog;

  @OneToMany(mappedBy = "resUser", targetEntity = ResCategory.class)
  private List<ResCategory> listOfResCategory;

  @OneToMany(mappedBy = "resUser", targetEntity = ResMessage.class)
  private List<ResMessage> listOfResMessage;

  @OneToMany(mappedBy = "resUser", targetEntity = ResPrinterModel.class)
  private List<ResPrinterModel> listOfResPrinterModel;

  @OneToMany(mappedBy = "resUser", targetEntity = ResCallLog.class)
  private List<ResCallLog> listOfResCallLog;

  @ManyToOne
  @JoinColumn(name = "last_updated_by", referencedColumnName = "id")
  private ResUser resUser;

  @OneToMany(mappedBy = "resUser", targetEntity = ResConvertedToTakeAway.class)
  private List<ResConvertedToTakeAway> listOfResConvertedToTakeAway;

  @OneToMany(mappedBy = "resUser", targetEntity = ResTableTransactions.class)
  private List<ResTableTransactions> listOfResTableTransactions;

  @OneToMany(mappedBy = "resUser", targetEntity = ResUser.class)
  private List<ResUser> listOfResUser;

  @OneToMany(mappedBy = "resUser", targetEntity = ResReservationInvoice.class)
  private List<ResReservationInvoice> listOfResReservationInvoice;

  @OneToMany(mappedBy = "resUser2", targetEntity = ResTable.class)
  private List<ResTable> listOfResTable2;

  @OneToMany(mappedBy = "resUser", targetEntity = ResProductWasteHistory.class)
  private List<ResProductWasteHistory> listOfResProductWasteHistory;

  @OneToMany(mappedBy = "resUser", targetEntity = ResNumberIdentifier.class)
  private List<ResNumberIdentifier> listOfResNumberIdentifier;

  @OneToMany(mappedBy = "resUser2", targetEntity = ResTableTransactions.class)
  private List<ResTableTransactions> listOfResTableTransactions2;

  @OneToMany(mappedBy = "resUser", targetEntity = ResProductPurchaseHistory.class)
  private List<ResProductPurchaseHistory> listOfResProductPurchaseHistory;

  @OneToMany(mappedBy = "resUser", targetEntity = ResMessageStatus.class)
  private List<ResMessageStatus> listOfResMessageStatus;

  @OneToMany(mappedBy = "resUser", targetEntity = ResInvoice.class)
  private List<ResInvoice> listOfResInvoice;

  @OneToMany(mappedBy = "resUser", targetEntity = ResCloakRoom.class)
  private List<ResCloakRoom> listOfResCloakRoom;

  @OneToMany(mappedBy = "resUser", targetEntity = ResZreportLog.class)
  private List<ResZreportLog> listOfResZreportLog;

  @OneToMany(mappedBy = "resUser", targetEntity = ResPrepLocation.class)
  private List<ResPrepLocation> listOfResPrepLocation;


  // ----------------------------------------------------------------------
  // CONSTRUCTOR(S)
  // ----------------------------------------------------------------------
  public ResUser() {
    super();
  }

  // ----------------------------------------------------------------------
  // GETTER & SETTER FOR THE KEY FIELD
  // ----------------------------------------------------------------------
  public void setId(Long id) {
    this.id = id;
  }

  public Long getId() {
    return this.id;
  }

  // ----------------------------------------------------------------------
  // GETTERS & SETTERS FOR FIELDS
  // ----------------------------------------------------------------------
  // --- DATABASE MAPPING : code ( VARCHAR )
  public void setCode(String code) {
    this.code = code;
  }

  public String getCode() {
    return this.code;
  }

  // --- DATABASE MAPPING : card ( VARCHAR )
  public void setCard(String card) {
    this.card = card;
  }

  public String getCard() {
    return this.card;
  }

  // --- DATABASE MAPPING : user_name ( VARCHAR )
  public void setUserName(String userName) {
    this.userName = userName;
  }

  public String getUserName() {
    return this.userName;
  }

  // --- DATABASE MAPPING : password ( VARCHAR )
  public void setPassword(String password) {
    this.password = password;
  }

  public String getPassword() {
    return this.password;
  }

  // --- DATABASE MAPPING : mobile ( VARCHAR )
  public void setMobile(String mobile) {
    this.mobile = mobile;
  }

  public String getMobile() {
    return this.mobile;
  }

  // --- DATABASE MAPPING : email ( VARCHAR )
  public void setEmail(String email) {
    this.email = email;
  }

  public String getEmail() {
    return this.email;
  }

  // --- DATABASE MAPPING : ip_address ( VARCHAR )
  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public String getIpAddress() {
    return this.ipAddress;
  }

  // --- DATABASE MAPPING : last_activity ( DATETIME )
  public void setLastActivity(Date lastActivity) {
    this.lastActivity = lastActivity;
  }

  public Date getLastActivity() {
    return this.lastActivity;
  }

  // --- DATABASE MAPPING : is_active ( BIT )
  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public Boolean getIsActive() {
    return this.isActive;
  }

  // --- DATABASE MAPPING : last_update ( DATETIME )
  public void setLastUpdate(Date lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  public Date getLastUpdate() {
    return this.lastUpdate;
  }

  // --- DATABASE MAPPING : api_key ( VARCHAR )
  public void setApiKey(String apiKey) {
    this.apiKey = apiKey;
  }

  public String getApiKey() {
    return this.apiKey;
  }


  // ----------------------------------------------------------------------
  // GETTERS & SETTERS FOR LINKS
  // ----------------------------------------------------------------------
  public void setListOfResMessage2(List<ResMessage> listOfResMessage2) {
    this.listOfResMessage2 = listOfResMessage2;
  }

  public List<ResMessage> getListOfResMessage2() {
    return this.listOfResMessage2;
  }

  public void setListOfResIngredient(List<ResIngredient> listOfResIngredient) {
    this.listOfResIngredient = listOfResIngredient;
  }

  public List<ResIngredient> getListOfResIngredient() {
    return this.listOfResIngredient;
  }

  public void setListOfResLog(List<ResLog> listOfResLog) {
    this.listOfResLog = listOfResLog;
  }

  public List<ResLog> getListOfResLog() {
    return this.listOfResLog;
  }

  public void setListOfResCombineReportPermission(
      List<ResCombineReportPermission> listOfResCombineReportPermission) {
    this.listOfResCombineReportPermission = listOfResCombineReportPermission;
  }

  public List<ResCombineReportPermission> getListOfResCombineReportPermission() {
    return this.listOfResCombineReportPermission;
  }

  public void setResUserType(ResUserType resUserType) {
    this.resUserType = resUserType;
  }

  public ResUserType getResUserType() {
    return this.resUserType;
  }

  public void setListOfResCustomerComment(List<ResCustomerComment> listOfResCustomerComment) {
    this.listOfResCustomerComment = listOfResCustomerComment;
  }

  public List<ResCustomerComment> getListOfResCustomerComment() {
    return this.listOfResCustomerComment;
  }

  public void setResCardType(ResCardType resCardType) {
    this.resCardType = resCardType;
  }

  public ResCardType getResCardType() {
    return this.resCardType;
  }

  public void setListOfResVoucher(List<ResVoucher> listOfResVoucher) {
    this.listOfResVoucher = listOfResVoucher;
  }

  public List<ResVoucher> getListOfResVoucher() {
    return this.listOfResVoucher;
  }

  public void setListOfResOrderReplica(List<ResOrderReplica> listOfResOrderReplica) {
    this.listOfResOrderReplica = listOfResOrderReplica;
  }

  public List<ResOrderReplica> getListOfResOrderReplica() {
    return this.listOfResOrderReplica;
  }

  public void setListOfResPrepLocation2(List<ResPrepLocation> listOfResPrepLocation2) {
    this.listOfResPrepLocation2 = listOfResPrepLocation2;
  }

  public List<ResPrepLocation> getListOfResPrepLocation2() {
    return this.listOfResPrepLocation2;
  }

  public void setListOfResButtonPermissionSettings(
      List<ResButtonPermissionSettings> listOfResButtonPermissionSettings) {
    this.listOfResButtonPermissionSettings = listOfResButtonPermissionSettings;
  }

  public List<ResButtonPermissionSettings> getListOfResButtonPermissionSettings() {
    return this.listOfResButtonPermissionSettings;
  }

  public void setListOfResOrderChild(List<ResOrderChild> listOfResOrderChild) {
    this.listOfResOrderChild = listOfResOrderChild;
  }

  public List<ResOrderChild> getListOfResOrderChild() {
    return this.listOfResOrderChild;
  }

  public void setListOfResQuantityType(List<ResQuantityType> listOfResQuantityType) {
    this.listOfResQuantityType = listOfResQuantityType;
  }

  public List<ResQuantityType> getListOfResQuantityType() {
    return this.listOfResQuantityType;
  }

  public void setListOfResPrinter(List<ResPrinter> listOfResPrinter) {
    this.listOfResPrinter = listOfResPrinter;
  }

  public List<ResPrinter> getListOfResPrinter() {
    return this.listOfResPrinter;
  }

  public void setListOfResZreportPermission(List<ResZreportPermission> listOfResZreportPermission) {
    this.listOfResZreportPermission = listOfResZreportPermission;
  }

  public List<ResZreportPermission> getListOfResZreportPermission() {
    return this.listOfResZreportPermission;
  }

  public void setListOfResOrder(List<ResOrder> listOfResOrder) {
    this.listOfResOrder = listOfResOrder;
  }

  public List<ResOrder> getListOfResOrder() {
    return this.listOfResOrder;
  }

  public void setListOfResProduct(List<ResProduct> listOfResProduct) {
    this.listOfResProduct = listOfResProduct;
  }

  public List<ResProduct> getListOfResProduct() {
    return this.listOfResProduct;
  }

  public void setListOfResPayment(List<ResPayment> listOfResPayment) {
    this.listOfResPayment = listOfResPayment;
  }

  public List<ResPayment> getListOfResPayment() {
    return this.listOfResPayment;
  }

  public void setListOfResCustomerMessage(List<ResCustomerMessage> listOfResCustomerMessage) {
    this.listOfResCustomerMessage = listOfResCustomerMessage;
  }

  public List<ResCustomerMessage> getListOfResCustomerMessage() {
    return this.listOfResCustomerMessage;
  }

  public void setListOfResFloor(List<ResFloor> listOfResFloor) {
    this.listOfResFloor = listOfResFloor;
  }

  public List<ResFloor> getListOfResFloor() {
    return this.listOfResFloor;
  }

  public void setListOfResFlaggedOccassion(List<ResFlaggedOccassion> listOfResFlaggedOccassion) {
    this.listOfResFlaggedOccassion = listOfResFlaggedOccassion;
  }

  public List<ResFlaggedOccassion> getListOfResFlaggedOccassion() {
    return this.listOfResFlaggedOccassion;
  }

  public void setListOfResModem(List<ResModem> listOfResModem) {
    this.listOfResModem = listOfResModem;
  }

  public List<ResModem> getListOfResModem() {
    return this.listOfResModem;
  }

  public void setListOfResDashboardSettings(List<ResDashboardSettings> listOfResDashboardSettings) {
    this.listOfResDashboardSettings = listOfResDashboardSettings;
  }

  public List<ResDashboardSettings> getListOfResDashboardSettings() {
    return this.listOfResDashboardSettings;
  }

  public void setListOfResTable(List<ResTable> listOfResTable) {
    this.listOfResTable = listOfResTable;
  }

  public List<ResTable> getListOfResTable() {
    return this.listOfResTable;
  }

  public void setListOfResOrderDeleteLog(List<ResOrderDeleteLog> listOfResOrderDeleteLog) {
    this.listOfResOrderDeleteLog = listOfResOrderDeleteLog;
  }

  public List<ResOrderDeleteLog> getListOfResOrderDeleteLog() {
    return this.listOfResOrderDeleteLog;
  }

  public void setListOfResCategory(List<ResCategory> listOfResCategory) {
    this.listOfResCategory = listOfResCategory;
  }

  public List<ResCategory> getListOfResCategory() {
    return this.listOfResCategory;
  }

  public void setListOfResMessage(List<ResMessage> listOfResMessage) {
    this.listOfResMessage = listOfResMessage;
  }

  public List<ResMessage> getListOfResMessage() {
    return this.listOfResMessage;
  }

  public void setListOfResPrinterModel(List<ResPrinterModel> listOfResPrinterModel) {
    this.listOfResPrinterModel = listOfResPrinterModel;
  }

  public List<ResPrinterModel> getListOfResPrinterModel() {
    return this.listOfResPrinterModel;
  }

  public void setListOfResCallLog(List<ResCallLog> listOfResCallLog) {
    this.listOfResCallLog = listOfResCallLog;
  }

  public List<ResCallLog> getListOfResCallLog() {
    return this.listOfResCallLog;
  }

  public void setResUser(ResUser resUser) {
    this.resUser = resUser;
  }

  public ResUser getResUser() {
    return this.resUser;
  }

  public void setListOfResConvertedToTakeAway(
      List<ResConvertedToTakeAway> listOfResConvertedToTakeAway) {
    this.listOfResConvertedToTakeAway = listOfResConvertedToTakeAway;
  }

  public List<ResConvertedToTakeAway> getListOfResConvertedToTakeAway() {
    return this.listOfResConvertedToTakeAway;
  }

  public void setListOfResTableTransactions(List<ResTableTransactions> listOfResTableTransactions) {
    this.listOfResTableTransactions = listOfResTableTransactions;
  }

  public List<ResTableTransactions> getListOfResTableTransactions() {
    return this.listOfResTableTransactions;
  }

  public void setListOfResUser(List<ResUser> listOfResUser) {
    this.listOfResUser = listOfResUser;
  }

  public List<ResUser> getListOfResUser() {
    return this.listOfResUser;
  }

  public void setListOfResReservationInvoice(List<ResReservationInvoice> listOfResReservationInvoice) {
    this.listOfResReservationInvoice = listOfResReservationInvoice;
  }

  public List<ResReservationInvoice> getListOfResReservationInvoice() {
    return this.listOfResReservationInvoice;
  }

  public void setListOfResTable2(List<ResTable> listOfResTable2) {
    this.listOfResTable2 = listOfResTable2;
  }

  public List<ResTable> getListOfResTable2() {
    return this.listOfResTable2;
  }

  public void setListOfResProductWasteHistory(
      List<ResProductWasteHistory> listOfResProductWasteHistory) {
    this.listOfResProductWasteHistory = listOfResProductWasteHistory;
  }

  public List<ResProductWasteHistory> getListOfResProductWasteHistory() {
    return this.listOfResProductWasteHistory;
  }

  public void setListOfResNumberIdentifier(List<ResNumberIdentifier> listOfResNumberIdentifier) {
    this.listOfResNumberIdentifier = listOfResNumberIdentifier;
  }

  public List<ResNumberIdentifier> getListOfResNumberIdentifier() {
    return this.listOfResNumberIdentifier;
  }

  public void setListOfResTableTransactions2(List<ResTableTransactions> listOfResTableTransactions2) {
    this.listOfResTableTransactions2 = listOfResTableTransactions2;
  }

  public List<ResTableTransactions> getListOfResTableTransactions2() {
    return this.listOfResTableTransactions2;
  }

  public void setListOfResProductPurchaseHistory(
      List<ResProductPurchaseHistory> listOfResProductPurchaseHistory) {
    this.listOfResProductPurchaseHistory = listOfResProductPurchaseHistory;
  }

  public List<ResProductPurchaseHistory> getListOfResProductPurchaseHistory() {
    return this.listOfResProductPurchaseHistory;
  }

  public void setListOfResMessageStatus(List<ResMessageStatus> listOfResMessageStatus) {
    this.listOfResMessageStatus = listOfResMessageStatus;
  }

  public List<ResMessageStatus> getListOfResMessageStatus() {
    return this.listOfResMessageStatus;
  }

  public void setListOfResInvoice(List<ResInvoice> listOfResInvoice) {
    this.listOfResInvoice = listOfResInvoice;
  }

  public List<ResInvoice> getListOfResInvoice() {
    return this.listOfResInvoice;
  }

  public void setListOfResCloakRoom(List<ResCloakRoom> listOfResCloakRoom) {
    this.listOfResCloakRoom = listOfResCloakRoom;
  }

  public List<ResCloakRoom> getListOfResCloakRoom() {
    return this.listOfResCloakRoom;
  }

  public void setListOfResZreportLog(List<ResZreportLog> listOfResZreportLog) {
    this.listOfResZreportLog = listOfResZreportLog;
  }

  public List<ResZreportLog> getListOfResZreportLog() {
    return this.listOfResZreportLog;
  }

  public void setListOfResPrepLocation(List<ResPrepLocation> listOfResPrepLocation) {
    this.listOfResPrepLocation = listOfResPrepLocation;
  }

  public List<ResPrepLocation> getListOfResPrepLocation() {
    return this.listOfResPrepLocation;
  }


  // ----------------------------------------------------------------------
  // toString METHOD
  // ----------------------------------------------------------------------
  public String toString() {
    StringBuffer sb = new StringBuffer();
    sb.append("[");
    sb.append(id);
    sb.append("]:");
    sb.append(code);
    sb.append("|");
    sb.append(card);
    sb.append("|");
    sb.append(userName);
    sb.append("|");
    sb.append(password);
    sb.append("|");
    sb.append(mobile);
    sb.append("|");
    sb.append(email);
    sb.append("|");
    sb.append(ipAddress);
    sb.append("|");
    sb.append(lastActivity);
    sb.append("|");
    sb.append(isActive);
    sb.append("|");
    sb.append(lastUpdate);
    sb.append("|");
    sb.append(apiKey);
    return sb.toString();
  }

}
