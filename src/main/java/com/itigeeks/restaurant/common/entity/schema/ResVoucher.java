/*
 * Created on 24 Mar 2016 ( Time 16:42:57 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.itigeeks.restaurant.common.entity.schema;

import java.io.Serializable;
import com.itigeeks.restaurant.common.entity.AbstractEntity;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "res_voucher"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="res_voucher", catalog="viceroy" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ResVoucher.countAll", query="SELECT COUNT(x) FROM ResVoucher x" )
} )
public class ResVoucher extends AbstractEntity implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="voucher_number", nullable=false, length=50)
    private String     voucherNumber ;

    @Column(name="value", nullable=false)
    private BigDecimal value        ;

    @Column(name="is_active", nullable=false)
    private Boolean    isActive     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_update", nullable=false)
    private Date       lastUpdate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="valid_from", nullable=false)
    private Date       validFrom    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="valid_till", nullable=false)
    private Date       validTill    ;

	// "lastUpdatedBy" (column "last_updated_by") is not defined by itself because used as FK in a link 
	// "customerId" (column "customer_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="customer_id", referencedColumnName="id")
    private ResCustomer resCustomer ;

    @OneToMany(mappedBy="resVoucher", targetEntity=ResPayment.class)
    private List<ResPayment> listOfResPayment;

    @OneToMany(mappedBy="resVoucher", targetEntity=ResVoucherExclusions.class)
    private List<ResVoucherExclusions> listOfResVoucherExclusions;

    @ManyToOne
    @JoinColumn(name="last_updated_by", referencedColumnName="id")
    private ResUser resUser     ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ResVoucher()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id )
    {
        this.id = id ;
    }
    public Long getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : voucher_number ( VARCHAR ) 
    public void setVoucherNumber( String voucherNumber )
    {
        this.voucherNumber = voucherNumber;
    }
    public String getVoucherNumber()
    {
        return this.voucherNumber;
    }

    //--- DATABASE MAPPING : value ( DECIMAL ) 
    public void setValue( BigDecimal value )
    {
        this.value = value;
    }
    public BigDecimal getValue()
    {
        return this.value;
    }

    //--- DATABASE MAPPING : is_active ( BIT ) 
    public void setIsActive( Boolean isActive )
    {
        this.isActive = isActive;
    }
    public Boolean getIsActive()
    {
        return this.isActive;
    }

    //--- DATABASE MAPPING : last_update ( DATETIME ) 
    public void setLastUpdate( Date lastUpdate )
    {
        this.lastUpdate = lastUpdate;
    }
    public Date getLastUpdate()
    {
        return this.lastUpdate;
    }

    //--- DATABASE MAPPING : valid_from ( DATETIME ) 
    public void setValidFrom( Date validFrom )
    {
        this.validFrom = validFrom;
    }
    public Date getValidFrom()
    {
        return this.validFrom;
    }

    //--- DATABASE MAPPING : valid_till ( DATETIME ) 
    public void setValidTill( Date validTill )
    {
        this.validTill = validTill;
    }
    public Date getValidTill()
    {
        return this.validTill;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setResCustomer( ResCustomer resCustomer )
    {
        this.resCustomer = resCustomer;
    }
    public ResCustomer getResCustomer()
    {
        return this.resCustomer;
    }

    public void setListOfResPayment( List<ResPayment> listOfResPayment )
    {
        this.listOfResPayment = listOfResPayment;
    }
    public List<ResPayment> getListOfResPayment()
    {
        return this.listOfResPayment;
    }

    public void setListOfResVoucherExclusions( List<ResVoucherExclusions> listOfResVoucherExclusions )
    {
        this.listOfResVoucherExclusions = listOfResVoucherExclusions;
    }
    public List<ResVoucherExclusions> getListOfResVoucherExclusions()
    {
        return this.listOfResVoucherExclusions;
    }

    public void setResUser( ResUser resUser )
    {
        this.resUser = resUser;
    }
    public ResUser getResUser()
    {
        return this.resUser;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(voucherNumber);
        sb.append("|");
        sb.append(value);
        sb.append("|");
        sb.append(isActive);
        sb.append("|");
        sb.append(lastUpdate);
        sb.append("|");
        sb.append(validFrom);
        sb.append("|");
        sb.append(validTill);
        return sb.toString(); 
    } 

}