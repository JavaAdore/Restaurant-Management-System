/*
 * Created on 24 Mar 2016 ( Time 16:42:56 ) Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite)

package com.itigeeks.restaurant.common.entity.schema;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.itigeeks.restaurant.common.entity.AbstractEntity;
// import javax.validation.constraints.* ;
// import org.hibernate.validator.constraints.* ;


/**
 * Persistent class for entity stored in table "res_promotional_offer"
 * 
 * @author Telosys Tools Generator
 * 
 */

@Entity
@Table(name = "res_promotional_offer", catalog = "viceroy")
// Define named queries here
@NamedQueries({@NamedQuery(name = "ResPromotionalOffer.countAll",
    query = "SELECT COUNT(x) FROM ResPromotionalOffer x")})
public class ResPromotionalOffer extends AbstractEntity implements Serializable {
  private static final long serialVersionUID = 1L;

  // ----------------------------------------------------------------------
  // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
  // ----------------------------------------------------------------------
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Column(name = "id", nullable = false)
  private Long id;


  // ----------------------------------------------------------------------
  // ENTITY DATA FIELDS
  // ----------------------------------------------------------------------
  @Temporal(TemporalType.DATE)
  @Column(name = "start_date", nullable = false)
  private Date startDate;

  @Temporal(TemporalType.DATE)
  @Column(name = "end_date")
  private Date endDate;

  @Temporal(TemporalType.TIME)
  @Column(name = "start_time", nullable = false)
  private Date startTime;

  @Temporal(TemporalType.TIME)
  @Column(name = "end_time", nullable = false)
  private Date endTime;

  @Column(name = "discount_rate")
  private Integer discountRate;

  @Column(name = "is_flat")
  private Boolean isFlat;



  // ----------------------------------------------------------------------
  // ENTITY LINKS ( RELATIONSHIP )
  // ----------------------------------------------------------------------
  @OneToMany(mappedBy = "resPromotionalOffer", targetEntity = ResPromotionProductDiscount.class)
  private List<ResPromotionProductDiscount> listOfResPromotionProductDiscount;

  @OneToMany(mappedBy = "resPromotionalOffer", targetEntity = ResPromotionProduct.class)
  private List<ResPromotionProduct> listOfResPromotionProduct;


  // ----------------------------------------------------------------------
  // CONSTRUCTOR(S)
  // ----------------------------------------------------------------------
  public ResPromotionalOffer() {
    super();
  }

  // ----------------------------------------------------------------------
  // GETTER & SETTER FOR THE KEY FIELD
  // ----------------------------------------------------------------------
  public void setId(Long id) {
    this.id = id;
  }

  public Long getId() {
    return this.id;
  }

  // ----------------------------------------------------------------------
  // GETTERS & SETTERS FOR FIELDS
  // ----------------------------------------------------------------------
  // --- DATABASE MAPPING : start_date ( DATE )
  public void setStartDate(Date startDate) {
    this.startDate = startDate;
  }

  public Date getStartDate() {
    return this.startDate;
  }

  // --- DATABASE MAPPING : end_date ( DATE )
  public void setEndDate(Date endDate) {
    this.endDate = endDate;
  }

  public Date getEndDate() {
    return this.endDate;
  }

  // --- DATABASE MAPPING : start_time ( TIME )
  public void setStartTime(Date startTime) {
    this.startTime = startTime;
  }

  public Date getStartTime() {
    return this.startTime;
  }

  // --- DATABASE MAPPING : end_time ( TIME )
  public void setEndTime(Date endTime) {
    this.endTime = endTime;
  }

  public Date getEndTime() {
    return this.endTime;
  }

  // --- DATABASE MAPPING : discount_rate ( DECIMAL )
  public void setDiscountRate(Integer discountRate) {
    this.discountRate = discountRate;
  }

  public Integer getDiscountRate() {
    return this.discountRate;
  }

  // --- DATABASE MAPPING : is_flat ( BIT )
  public void setIsFlat(Boolean isFlat) {
    this.isFlat = isFlat;
  }

  public Boolean getIsFlat() {
    return this.isFlat;
  }


  // ----------------------------------------------------------------------
  // GETTERS & SETTERS FOR LINKS
  // ----------------------------------------------------------------------
  public void setListOfResPromotionProductDiscount(
      List<ResPromotionProductDiscount> listOfResPromotionProductDiscount) {
    this.listOfResPromotionProductDiscount = listOfResPromotionProductDiscount;
  }

  public List<ResPromotionProductDiscount> getListOfResPromotionProductDiscount() {
    return this.listOfResPromotionProductDiscount;
  }

  public void setListOfResPromotionProduct(List<ResPromotionProduct> listOfResPromotionProduct) {
    this.listOfResPromotionProduct = listOfResPromotionProduct;
  }

  public List<ResPromotionProduct> getListOfResPromotionProduct() {
    return this.listOfResPromotionProduct;
  }


  // ----------------------------------------------------------------------
  // toString METHOD
  // ----------------------------------------------------------------------
  public String toString() {
    StringBuffer sb = new StringBuffer();
    sb.append("[");
    sb.append(id);
    sb.append("]:");
    sb.append(startDate);
    sb.append("|");
    sb.append(endDate);
    sb.append("|");
    sb.append(startTime);
    sb.append("|");
    sb.append(endTime);
    sb.append("|");
    sb.append(discountRate);
    sb.append("|");
    sb.append(isFlat);
    return sb.toString();
  }

}
