/*
 * Created on 24 Mar 2016 ( Time 16:42:54 ) Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite)

package com.itigeeks.restaurant.common.entity.schema;

import java.io.Serializable;

import com.itigeeks.restaurant.common.entity.AbstractEntity;
// import javax.validation.constraints.* ;
// import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * Persistent class for entity stored in table "res_dbbackup_settings"
 * 
 * @author Telosys Tools Generator
 * 
 */

@Entity
@Table(name = "res_dbbackup_settings", catalog = "viceroy")
// Define named queries here
@NamedQueries({@NamedQuery(name = "ResDbbackupSettings.countAll",
    query = "SELECT COUNT(x) FROM ResDbbackupSettings x")})
public class ResDbbackupSettings extends AbstractEntity implements Serializable {
  private static final long serialVersionUID = 1L;

  // ----------------------------------------------------------------------
  // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
  // ----------------------------------------------------------------------
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Column(name = "id", nullable = false)
  private Long id;


  // ----------------------------------------------------------------------
  // ENTITY DATA FIELDS
  // ----------------------------------------------------------------------
  @Column(name = "schedule_hour", nullable = false, length = 2)
  private String scheduleHour;

  @Column(name = "schedule_ap", nullable = false, length = 2)
  private String scheduleAp;

  @Column(name = "email_address", nullable = false, length = 255)
  private String emailAddress;

  @Column(name = "host", nullable = false, length = 255)
  private String host;

  @Column(name = "user", nullable = false, length = 255)
  private String user;

  @Column(name = "password", nullable = false, length = 255)
  private String password;

  @Column(name = "remote_directory", nullable = false, length = 255)
  private String remoteDirectory;



  // ----------------------------------------------------------------------
  // ENTITY LINKS ( RELATIONSHIP )
  // ----------------------------------------------------------------------

  // ----------------------------------------------------------------------
  // CONSTRUCTOR(S)
  // ----------------------------------------------------------------------
  public ResDbbackupSettings() {
    super();
  }

  // ----------------------------------------------------------------------
  // GETTER & SETTER FOR THE KEY FIELD
  // ----------------------------------------------------------------------
  public void setId(Long id) {
    this.id = id;
  }

  public Long getId() {
    return this.id;
  }

  // ----------------------------------------------------------------------
  // GETTERS & SETTERS FOR FIELDS
  // ----------------------------------------------------------------------
  // --- DATABASE MAPPING : schedule_hour ( VARCHAR )
  public void setScheduleHour(String scheduleHour) {
    this.scheduleHour = scheduleHour;
  }

  public String getScheduleHour() {
    return this.scheduleHour;
  }

  // --- DATABASE MAPPING : schedule_ap ( VARCHAR )
  public void setScheduleAp(String scheduleAp) {
    this.scheduleAp = scheduleAp;
  }

  public String getScheduleAp() {
    return this.scheduleAp;
  }

  // --- DATABASE MAPPING : email_address ( VARCHAR )
  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

  public String getEmailAddress() {
    return this.emailAddress;
  }

  // --- DATABASE MAPPING : host ( VARCHAR )
  public void setHost(String host) {
    this.host = host;
  }

  public String getHost() {
    return this.host;
  }

  // --- DATABASE MAPPING : user ( VARCHAR )
  public void setUser(String user) {
    this.user = user;
  }

  public String getUser() {
    return this.user;
  }

  // --- DATABASE MAPPING : password ( VARCHAR )
  public void setPassword(String password) {
    this.password = password;
  }

  public String getPassword() {
    return this.password;
  }

  // --- DATABASE MAPPING : remote_directory ( VARCHAR )
  public void setRemoteDirectory(String remoteDirectory) {
    this.remoteDirectory = remoteDirectory;
  }

  public String getRemoteDirectory() {
    return this.remoteDirectory;
  }


  // ----------------------------------------------------------------------
  // GETTERS & SETTERS FOR LINKS
  // ----------------------------------------------------------------------

  // ----------------------------------------------------------------------
  // toString METHOD
  // ----------------------------------------------------------------------
  public String toString() {
    StringBuffer sb = new StringBuffer();
    sb.append("[");
    sb.append(id);
    sb.append("]:");
    sb.append(scheduleHour);
    sb.append("|");
    sb.append(scheduleAp);
    sb.append("|");
    sb.append(emailAddress);
    sb.append("|");
    sb.append(host);
    sb.append("|");
    sb.append(user);
    sb.append("|");
    sb.append(password);
    sb.append("|");
    sb.append(remoteDirectory);
    return sb.toString();
  }

}
