/*
 * Created on 24 Mar 2016 ( Time 16:42:55 ) Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite)

package com.itigeeks.restaurant.common.entity.schema;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.itigeeks.restaurant.common.entity.AbstractEntity;
// import javax.validation.constraints.* ;
// import org.hibernate.validator.constraints.* ;


/**
 * Persistent class for entity stored in table "res_payment"
 * 
 * @author Telosys Tools Generator
 * 
 */

@Entity
@Table(name = "res_payment", catalog = "viceroy")
// Define named queries here
@NamedQueries({@NamedQuery(name = "ResPayment.countAll",
    query = "SELECT COUNT(x) FROM ResPayment x")})
public class ResPayment extends AbstractEntity implements Serializable {
  private static final long serialVersionUID = 1L;

  // ----------------------------------------------------------------------
  // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
  // ----------------------------------------------------------------------
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Column(name = "id", nullable = false)
  private Long id;


  // ----------------------------------------------------------------------
  // ENTITY DATA FIELDS
  // ----------------------------------------------------------------------
  @Column(name = "amount", nullable = false)
  private Integer amount;

  @Column(name = "cheque_number", length = 15)
  private String chequeNumber;

  @Column(name = "cc_number", length = 16)
  private String ccNumber;

  @Column(name = "is_active", nullable = false)
  private Boolean isActive;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "last_update", nullable = false)
  private Date lastUpdate;

  // "invoiceId" (column "invoice_id") is not defined by itself because used as FK in a link
  // "orderId" (column "order_id") is not defined by itself because used as FK in a link
  // "paymentMethodId" (column "payment_method_id") is not defined by itself because used as FK in a
  // link
  // "voucherId" (column "voucher_id") is not defined by itself because used as FK in a link
  // "lastUpdatedBy" (column "last_updated_by") is not defined by itself because used as FK in a
  // link
  // "terminalId" (column "terminal_id") is not defined by itself because used as FK in a link


  // ----------------------------------------------------------------------
  // ENTITY LINKS ( RELATIONSHIP )
  // ----------------------------------------------------------------------
  @ManyToOne
  @JoinColumn(name = "invoice_id", referencedColumnName = "id")
  private ResInvoice resInvoice;

  @ManyToOne
  @JoinColumn(name = "payment_method_id", referencedColumnName = "id")
  private ResPaymentMethod resPaymentMethod;

  @ManyToOne
  @JoinColumn(name = "last_updated_by", referencedColumnName = "id")
  private ResUser resUser;

  @ManyToOne
  @JoinColumn(name = "order_id", referencedColumnName = "id")
  private ResOrder resOrder;

  @ManyToOne
  @JoinColumn(name = "voucher_id", referencedColumnName = "id")
  private ResVoucher resVoucher;

  @ManyToOne
  @JoinColumn(name = "terminal_id", referencedColumnName = "id")
  private ResTerminal resTerminal;


  // ----------------------------------------------------------------------
  // CONSTRUCTOR(S)
  // ----------------------------------------------------------------------
  public ResPayment() {
    super();
  }

  // ----------------------------------------------------------------------
  // GETTER & SETTER FOR THE KEY FIELD
  // ----------------------------------------------------------------------
  public void setId(Long id) {
    this.id = id;
  }

  public Long getId() {
    return this.id;
  }

  // ----------------------------------------------------------------------
  // GETTERS & SETTERS FOR FIELDS
  // ----------------------------------------------------------------------
  // --- DATABASE MAPPING : amount ( DECIMAL )
  public void setAmount(Integer amount) {
    this.amount = amount;
  }

  public Integer getAmount() {
    return this.amount;
  }

  // --- DATABASE MAPPING : cheque_number ( VARCHAR )
  public void setChequeNumber(String chequeNumber) {
    this.chequeNumber = chequeNumber;
  }

  public String getChequeNumber() {
    return this.chequeNumber;
  }

  // --- DATABASE MAPPING : cc_number ( VARCHAR )
  public void setCcNumber(String ccNumber) {
    this.ccNumber = ccNumber;
  }

  public String getCcNumber() {
    return this.ccNumber;
  }

  // --- DATABASE MAPPING : is_active ( BIT )
  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public Boolean getIsActive() {
    return this.isActive;
  }

  // --- DATABASE MAPPING : last_update ( DATETIME )
  public void setLastUpdate(Date lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  public Date getLastUpdate() {
    return this.lastUpdate;
  }


  // ----------------------------------------------------------------------
  // GETTERS & SETTERS FOR LINKS
  // ----------------------------------------------------------------------
  public void setResInvoice(ResInvoice resInvoice) {
    this.resInvoice = resInvoice;
  }

  public ResInvoice getResInvoice() {
    return this.resInvoice;
  }

  public void setResPaymentMethod(ResPaymentMethod resPaymentMethod) {
    this.resPaymentMethod = resPaymentMethod;
  }

  public ResPaymentMethod getResPaymentMethod() {
    return this.resPaymentMethod;
  }

  public void setResUser(ResUser resUser) {
    this.resUser = resUser;
  }

  public ResUser getResUser() {
    return this.resUser;
  }

  public void setResOrder(ResOrder resOrder) {
    this.resOrder = resOrder;
  }

  public ResOrder getResOrder() {
    return this.resOrder;
  }

  public void setResVoucher(ResVoucher resVoucher) {
    this.resVoucher = resVoucher;
  }

  public ResVoucher getResVoucher() {
    return this.resVoucher;
  }

  public void setResTerminal(ResTerminal resTerminal) {
    this.resTerminal = resTerminal;
  }

  public ResTerminal getResTerminal() {
    return this.resTerminal;
  }


  // ----------------------------------------------------------------------
  // toString METHOD
  // ----------------------------------------------------------------------
  public String toString() {
    StringBuffer sb = new StringBuffer();
    sb.append("[");
    sb.append(id);
    sb.append("]:");
    sb.append(amount);
    sb.append("|");
    sb.append(chequeNumber);
    sb.append("|");
    sb.append(ccNumber);
    sb.append("|");
    sb.append(isActive);
    sb.append("|");
    sb.append(lastUpdate);
    return sb.toString();
  }

}
