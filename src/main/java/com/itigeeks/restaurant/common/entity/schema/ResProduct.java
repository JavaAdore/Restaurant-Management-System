/*
 * Created on 24 Mar 2016 ( Time 16:42:55 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.itigeeks.restaurant.common.entity.schema;

import java.io.Serializable;
import com.itigeeks.restaurant.common.entity.AbstractEntity;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "res_product"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="res_product", catalog="viceroy" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ResProduct.countAll", query="SELECT COUNT(x) FROM ResProduct x" )
} )
public class ResProduct extends AbstractEntity implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Long      id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="product_name", nullable=false, length=150)
    private String     productName  ;

    @Column(name="long_name", length=250)
    private String     longName     ;

    @Column(name="description", length=250)
    private String     description  ;

    @Column(name="price", nullable=false)
    private BigDecimal price        ;

    @Column(name="takeaway_price")
    private BigDecimal takeawayPrice ;

    @Column(name="web_order_price")
    private BigDecimal webOrderPrice ;

    @Column(name="delivery_price")
    private BigDecimal deliveryPrice ;

    @Column(name="waiting_price", nullable=false)
    private BigDecimal waitingPrice ;

    @Column(name="is_favourite", nullable=false)
    private Boolean    isFavourite  ;

    @Column(name="is_bar_favourite", nullable=false)
    private Boolean    isBarFavourite ;

    @Column(name="is_active", nullable=false)
    private Boolean    isActive     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_update", nullable=false)
    private Date       lastUpdate   ;

    @Column(name="is_tax_inclusive", nullable=false)
    private Boolean    isTaxInclusive ;

    @Column(name="is_taxable", nullable=false)
    private Boolean    isTaxable    ;

    @Column(name="sequence_number", nullable=false)
    private Short      sequenceNumber ;

    @Column(name="is_stock_controlled", nullable=false)
    private Boolean    isStockControlled ;

    @Column(name="quantity")
    private BigDecimal quantity     ;

    @Column(name="stock")
    private BigDecimal stock        ;

	// "parentId" (column "parent_id") is not defined by itself because used as FK in a link 
	// "categoryId" (column "category_id") is not defined by itself because used as FK in a link 
	// "prepLocationId" (column "prep_location_id") is not defined by itself because used as FK in a link 
	// "lastUpdatedBy" (column "last_updated_by") is not defined by itself because used as FK in a link 
	// "quantityTypeId" (column "quantity_type_id") is not defined by itself because used as FK in a link 
	// "stockQuantityTypeId" (column "stock_quantity_type_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="parent_id", referencedColumnName="id")
    private ResProduct resProduct  ;

    @OneToMany(mappedBy="resProduct", targetEntity=ResProductWasteHistory.class)
    private List<ResProductWasteHistory> listOfResProductWasteHistory;

    @OneToMany(mappedBy="resProduct", targetEntity=ResProduct.class)
    private List<ResProduct> listOfResProduct;

    @OneToMany(mappedBy="resProduct", targetEntity=ResConvertedToTakeAway.class)
    private List<ResConvertedToTakeAway> listOfResConvertedToTakeAway;

    @OneToMany(mappedBy="resProduct", targetEntity=ResDiscountProduct.class)
    private List<ResDiscountProduct> listOfResDiscountProduct;

    @OneToMany(mappedBy="resProduct", targetEntity=ResProductPurchaseHistory.class)
    private List<ResProductPurchaseHistory> listOfResProductPurchaseHistory;

    @OneToMany(mappedBy="resProduct", targetEntity=ResOrderProductAddon.class)
    private List<ResOrderProductAddon> listOfResOrderProductAddon;

    @ManyToOne
    @JoinColumn(name="stock_quantity_type_id", referencedColumnName="id")
    private ResQuantityType resQuantityType2;

    @OneToMany(mappedBy="resProduct", targetEntity=ResPromotionProduct.class)
    private List<ResPromotionProduct> listOfResPromotionProduct;

    @OneToMany(mappedBy="resProduct", targetEntity=ResOrderDeleteLog.class)
    private List<ResOrderDeleteLog> listOfResOrderDeleteLog;

    @OneToMany(mappedBy="resProduct2", targetEntity=ResOrderChild.class)
    private List<ResOrderChild> listOfResOrderChild2;

    @ManyToOne
    @JoinColumn(name="category_id", referencedColumnName="id")
    private ResCategory resCategory ;

    @OneToMany(mappedBy="resProduct", targetEntity=ResProductIngredient.class)
    private List<ResProductIngredient> listOfResProductIngredient;

    @OneToMany(mappedBy="resProduct", targetEntity=ResOrderChild.class)
    private List<ResOrderChild> listOfResOrderChild;

    @ManyToOne
    @JoinColumn(name="quantity_type_id", referencedColumnName="id")
    private ResQuantityType resQuantityType;

    @OneToMany(mappedBy="resProduct", targetEntity=ResProductAddon.class)
    private List<ResProductAddon> listOfResProductAddon;

    @ManyToOne
    @JoinColumn(name="prep_location_id", referencedColumnName="id")
    private ResPrepLocation resPrepLocation;

    @OneToMany(mappedBy="resProduct2", targetEntity=ResPromotionProduct.class)
    private List<ResPromotionProduct> listOfResPromotionProduct2;

    @OneToMany(mappedBy="resProduct", targetEntity=ResProductWithWithout.class)
    private List<ResProductWithWithout> listOfResProductWithWithout;

    @OneToMany(mappedBy="resProduct", targetEntity=ResAdditionalCompanyCategory.class)
    private List<ResAdditionalCompanyCategory> listOfResAdditionalCompanyCategory;

    @ManyToOne
    @JoinColumn(name="last_updated_by", referencedColumnName="id")
    private ResUser resUser     ;

    @OneToMany(mappedBy="resProduct", targetEntity=ResPromotionProductDiscount.class)
    private List<ResPromotionProductDiscount> listOfResPromotionProductDiscount;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ResProduct()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id )
    {
        this.id = id ;
    }
    public Long getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : product_name ( VARCHAR ) 
    public void setProductName( String productName )
    {
        this.productName = productName;
    }
    public String getProductName()
    {
        return this.productName;
    }

    //--- DATABASE MAPPING : long_name ( VARCHAR ) 
    public void setLongName( String longName )
    {
        this.longName = longName;
    }
    public String getLongName()
    {
        return this.longName;
    }

    //--- DATABASE MAPPING : description ( VARCHAR ) 
    public void setDescription( String description )
    {
        this.description = description;
    }
    public String getDescription()
    {
        return this.description;
    }

    //--- DATABASE MAPPING : price ( DECIMAL ) 
    public void setPrice( BigDecimal price )
    {
        this.price = price;
    }
    public BigDecimal getPrice()
    {
        return this.price;
    }

    //--- DATABASE MAPPING : takeaway_price ( DECIMAL ) 
    public void setTakeawayPrice( BigDecimal takeawayPrice )
    {
        this.takeawayPrice = takeawayPrice;
    }
    public BigDecimal getTakeawayPrice()
    {
        return this.takeawayPrice;
    }

    //--- DATABASE MAPPING : web_order_price ( DECIMAL ) 
    public void setWebOrderPrice( BigDecimal webOrderPrice )
    {
        this.webOrderPrice = webOrderPrice;
    }
    public BigDecimal getWebOrderPrice()
    {
        return this.webOrderPrice;
    }

    //--- DATABASE MAPPING : delivery_price ( DECIMAL ) 
    public void setDeliveryPrice( BigDecimal deliveryPrice )
    {
        this.deliveryPrice = deliveryPrice;
    }
    public BigDecimal getDeliveryPrice()
    {
        return this.deliveryPrice;
    }

    //--- DATABASE MAPPING : waiting_price ( DECIMAL ) 
    public void setWaitingPrice( BigDecimal waitingPrice )
    {
        this.waitingPrice = waitingPrice;
    }
    public BigDecimal getWaitingPrice()
    {
        return this.waitingPrice;
    }

    //--- DATABASE MAPPING : is_favourite ( BIT ) 
    public void setIsFavourite( Boolean isFavourite )
    {
        this.isFavourite = isFavourite;
    }
    public Boolean getIsFavourite()
    {
        return this.isFavourite;
    }

    //--- DATABASE MAPPING : is_bar_favourite ( BIT ) 
    public void setIsBarFavourite( Boolean isBarFavourite )
    {
        this.isBarFavourite = isBarFavourite;
    }
    public Boolean getIsBarFavourite()
    {
        return this.isBarFavourite;
    }

    //--- DATABASE MAPPING : is_active ( BIT ) 
    public void setIsActive( Boolean isActive )
    {
        this.isActive = isActive;
    }
    public Boolean getIsActive()
    {
        return this.isActive;
    }

    //--- DATABASE MAPPING : last_update ( DATETIME ) 
    public void setLastUpdate( Date lastUpdate )
    {
        this.lastUpdate = lastUpdate;
    }
    public Date getLastUpdate()
    {
        return this.lastUpdate;
    }

    //--- DATABASE MAPPING : is_tax_inclusive ( BIT ) 
    public void setIsTaxInclusive( Boolean isTaxInclusive )
    {
        this.isTaxInclusive = isTaxInclusive;
    }
    public Boolean getIsTaxInclusive()
    {
        return this.isTaxInclusive;
    }

    //--- DATABASE MAPPING : is_taxable ( BIT ) 
    public void setIsTaxable( Boolean isTaxable )
    {
        this.isTaxable = isTaxable;
    }
    public Boolean getIsTaxable()
    {
        return this.isTaxable;
    }

    //--- DATABASE MAPPING : sequence_number ( SMALLINT ) 
    public void setSequenceNumber( Short sequenceNumber )
    {
        this.sequenceNumber = sequenceNumber;
    }
    public Short getSequenceNumber()
    {
        return this.sequenceNumber;
    }

    //--- DATABASE MAPPING : is_stock_controlled ( BIT ) 
    public void setIsStockControlled( Boolean isStockControlled )
    {
        this.isStockControlled = isStockControlled;
    }
    public Boolean getIsStockControlled()
    {
        return this.isStockControlled;
    }

    //--- DATABASE MAPPING : quantity ( DECIMAL ) 
    public void setQuantity( BigDecimal quantity )
    {
        this.quantity = quantity;
    }
    public BigDecimal getQuantity()
    {
        return this.quantity;
    }

    //--- DATABASE MAPPING : stock ( DECIMAL ) 
    public void setStock( BigDecimal stock )
    {
        this.stock = stock;
    }
    public BigDecimal getStock()
    {
        return this.stock;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setResProduct( ResProduct resProduct )
    {
        this.resProduct = resProduct;
    }
    public ResProduct getResProduct()
    {
        return this.resProduct;
    }

    public void setListOfResProductWasteHistory( List<ResProductWasteHistory> listOfResProductWasteHistory )
    {
        this.listOfResProductWasteHistory = listOfResProductWasteHistory;
    }
    public List<ResProductWasteHistory> getListOfResProductWasteHistory()
    {
        return this.listOfResProductWasteHistory;
    }

    public void setListOfResProduct( List<ResProduct> listOfResProduct )
    {
        this.listOfResProduct = listOfResProduct;
    }
    public List<ResProduct> getListOfResProduct()
    {
        return this.listOfResProduct;
    }

    public void setListOfResConvertedToTakeAway( List<ResConvertedToTakeAway> listOfResConvertedToTakeAway )
    {
        this.listOfResConvertedToTakeAway = listOfResConvertedToTakeAway;
    }
    public List<ResConvertedToTakeAway> getListOfResConvertedToTakeAway()
    {
        return this.listOfResConvertedToTakeAway;
    }

    public void setListOfResDiscountProduct( List<ResDiscountProduct> listOfResDiscountProduct )
    {
        this.listOfResDiscountProduct = listOfResDiscountProduct;
    }
    public List<ResDiscountProduct> getListOfResDiscountProduct()
    {
        return this.listOfResDiscountProduct;
    }

    public void setListOfResProductPurchaseHistory( List<ResProductPurchaseHistory> listOfResProductPurchaseHistory )
    {
        this.listOfResProductPurchaseHistory = listOfResProductPurchaseHistory;
    }
    public List<ResProductPurchaseHistory> getListOfResProductPurchaseHistory()
    {
        return this.listOfResProductPurchaseHistory;
    }

    public void setListOfResOrderProductAddon( List<ResOrderProductAddon> listOfResOrderProductAddon )
    {
        this.listOfResOrderProductAddon = listOfResOrderProductAddon;
    }
    public List<ResOrderProductAddon> getListOfResOrderProductAddon()
    {
        return this.listOfResOrderProductAddon;
    }

    public void setResQuantityType2( ResQuantityType resQuantityType2 )
    {
        this.resQuantityType2 = resQuantityType2;
    }
    public ResQuantityType getResQuantityType2()
    {
        return this.resQuantityType2;
    }

    public void setListOfResPromotionProduct( List<ResPromotionProduct> listOfResPromotionProduct )
    {
        this.listOfResPromotionProduct = listOfResPromotionProduct;
    }
    public List<ResPromotionProduct> getListOfResPromotionProduct()
    {
        return this.listOfResPromotionProduct;
    }

    public void setListOfResOrderDeleteLog( List<ResOrderDeleteLog> listOfResOrderDeleteLog )
    {
        this.listOfResOrderDeleteLog = listOfResOrderDeleteLog;
    }
    public List<ResOrderDeleteLog> getListOfResOrderDeleteLog()
    {
        return this.listOfResOrderDeleteLog;
    }

    public void setListOfResOrderChild2( List<ResOrderChild> listOfResOrderChild2 )
    {
        this.listOfResOrderChild2 = listOfResOrderChild2;
    }
    public List<ResOrderChild> getListOfResOrderChild2()
    {
        return this.listOfResOrderChild2;
    }

    public void setResCategory( ResCategory resCategory )
    {
        this.resCategory = resCategory;
    }
    public ResCategory getResCategory()
    {
        return this.resCategory;
    }

    public void setListOfResProductIngredient( List<ResProductIngredient> listOfResProductIngredient )
    {
        this.listOfResProductIngredient = listOfResProductIngredient;
    }
    public List<ResProductIngredient> getListOfResProductIngredient()
    {
        return this.listOfResProductIngredient;
    }

    public void setListOfResOrderChild( List<ResOrderChild> listOfResOrderChild )
    {
        this.listOfResOrderChild = listOfResOrderChild;
    }
    public List<ResOrderChild> getListOfResOrderChild()
    {
        return this.listOfResOrderChild;
    }

    public void setResQuantityType( ResQuantityType resQuantityType )
    {
        this.resQuantityType = resQuantityType;
    }
    public ResQuantityType getResQuantityType()
    {
        return this.resQuantityType;
    }

    public void setListOfResProductAddon( List<ResProductAddon> listOfResProductAddon )
    {
        this.listOfResProductAddon = listOfResProductAddon;
    }
    public List<ResProductAddon> getListOfResProductAddon()
    {
        return this.listOfResProductAddon;
    }

    public void setResPrepLocation( ResPrepLocation resPrepLocation )
    {
        this.resPrepLocation = resPrepLocation;
    }
    public ResPrepLocation getResPrepLocation()
    {
        return this.resPrepLocation;
    }

    public void setListOfResPromotionProduct2( List<ResPromotionProduct> listOfResPromotionProduct2 )
    {
        this.listOfResPromotionProduct2 = listOfResPromotionProduct2;
    }
    public List<ResPromotionProduct> getListOfResPromotionProduct2()
    {
        return this.listOfResPromotionProduct2;
    }

    public void setListOfResProductWithWithout( List<ResProductWithWithout> listOfResProductWithWithout )
    {
        this.listOfResProductWithWithout = listOfResProductWithWithout;
    }
    public List<ResProductWithWithout> getListOfResProductWithWithout()
    {
        return this.listOfResProductWithWithout;
    }

    public void setListOfResAdditionalCompanyCategory( List<ResAdditionalCompanyCategory> listOfResAdditionalCompanyCategory )
    {
        this.listOfResAdditionalCompanyCategory = listOfResAdditionalCompanyCategory;
    }
    public List<ResAdditionalCompanyCategory> getListOfResAdditionalCompanyCategory()
    {
        return this.listOfResAdditionalCompanyCategory;
    }

    public void setResUser( ResUser resUser )
    {
        this.resUser = resUser;
    }
    public ResUser getResUser()
    {
        return this.resUser;
    }

    public void setListOfResPromotionProductDiscount( List<ResPromotionProductDiscount> listOfResPromotionProductDiscount )
    {
        this.listOfResPromotionProductDiscount = listOfResPromotionProductDiscount;
    }
    public List<ResPromotionProductDiscount> getListOfResPromotionProductDiscount()
    {
        return this.listOfResPromotionProductDiscount;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(productName);
        sb.append("|");
        sb.append(longName);
        sb.append("|");
        sb.append(description);
        sb.append("|");
        sb.append(price);
        sb.append("|");
        sb.append(takeawayPrice);
        sb.append("|");
        sb.append(webOrderPrice);
        sb.append("|");
        sb.append(deliveryPrice);
        sb.append("|");
        sb.append(waitingPrice);
        sb.append("|");
        sb.append(isFavourite);
        sb.append("|");
        sb.append(isBarFavourite);
        sb.append("|");
        sb.append(isActive);
        sb.append("|");
        sb.append(lastUpdate);
        sb.append("|");
        sb.append(isTaxInclusive);
        sb.append("|");
        sb.append(isTaxable);
        sb.append("|");
        sb.append(sequenceNumber);
        sb.append("|");
        sb.append(isStockControlled);
        sb.append("|");
        sb.append(quantity);
        sb.append("|");
        sb.append(stock);
        return sb.toString(); 
    } 

}