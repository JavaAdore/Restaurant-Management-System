/*
 * Created on 24 Mar 2016 ( Time 16:42:56 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.itigeeks.restaurant.common.entity.schema;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.itigeeks.restaurant.common.entity.AbstractEntity;
//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


/**
 * Persistent class for entity stored in table "res_product_misc"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="res_product_misc", catalog="viceroy" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ResProductMisc.countAll", query="SELECT COUNT(x) FROM ResProductMisc x" )
} )
public class ResProductMisc extends AbstractEntity implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="product", length=500)
    private String     product      ;

    @Column(name="price")
    private Integer price        ;

    @Column(name="quantity", nullable=false)
    private Short      quantity     ;

	// "orderChildId" (column "order_child_id") is not defined by itself because used as FK in a link 
	// "prepLocationId" (column "prep_location_id") is not defined by itself because used as FK in a link 
	// "quantityTypeId" (column "quantity_type_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="quantity_type_id", referencedColumnName="id")
    private ResQuantityType resQuantityType;

    @ManyToOne
    @JoinColumn(name="order_child_id", referencedColumnName="id")
    private ResOrderChild resOrderChild;

    @ManyToOne
    @JoinColumn(name="prep_location_id", referencedColumnName="id")
    private ResPrepLocation resPrepLocation;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ResProductMisc()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id )
    {
        this.id = id ;
    }
    public Long getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : product ( VARCHAR ) 
    public void setProduct( String product )
    {
        this.product = product;
    }
    public String getProduct()
    {
        return this.product;
    }

    //--- DATABASE MAPPING : price ( DECIMAL ) 
    public void setPrice( Integer price )
    {
        this.price = price;
    }
    public Integer getPrice()
    {
        return this.price;
    }

    //--- DATABASE MAPPING : quantity ( SMALLINT ) 
    public void setQuantity( Short quantity )
    {
        this.quantity = quantity;
    }
    public Short getQuantity()
    {
        return this.quantity;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setResQuantityType( ResQuantityType resQuantityType )
    {
        this.resQuantityType = resQuantityType;
    }
    public ResQuantityType getResQuantityType()
    {
        return this.resQuantityType;
    }

    public void setResOrderChild( ResOrderChild resOrderChild )
    {
        this.resOrderChild = resOrderChild;
    }
    public ResOrderChild getResOrderChild()
    {
        return this.resOrderChild;
    }

    public void setResPrepLocation( ResPrepLocation resPrepLocation )
    {
        this.resPrepLocation = resPrepLocation;
    }
    public ResPrepLocation getResPrepLocation()
    {
        return this.resPrepLocation;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(product);
        sb.append("|");
        sb.append(price);
        sb.append("|");
        sb.append(quantity);
        return sb.toString(); 
    } 

}